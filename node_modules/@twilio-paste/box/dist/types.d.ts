/// <reference types="react" />
import type { BackgroundProps, BorderProps, FlexboxProps, GridProps, LayoutProps, PositionProps, ShadowProps, SpaceProps, TypographyProps, CSSProps } from '@twilio-paste/style-props';
import type { CustomTheme } from '@twilio-paste/customization';
import type { PseudoPropStyles } from './PseudoPropStyles';
export interface BoxBaseStyleProps extends LayoutProps, SpaceProps, BackgroundProps, BorderProps, ShadowProps, PositionProps, TypographyProps, FlexboxProps, GridProps, CSSProps {
}
export type BoxPseudoStyleProps = Partial<Record<keyof typeof PseudoPropStyles, BoxBaseStyleProps>>;
export interface BoxStyleProps extends BoxBaseStyleProps, BoxPseudoStyleProps {
}
export interface BoxElementProps extends Omit<React.HTMLAttributes<HTMLElement>, keyof BoxBaseStyleProps> {
    accept?: string;
    as?: keyof JSX.IntrinsicElements;
    type?: string;
    alt?: string;
    src?: string;
    href?: string;
    rel?: string;
    target?: string;
    multiple?: boolean;
    label?: string;
    datetime?: string;
    /** element identifier for customization */
    element?: string;
    /** variant for variant styling */
    variant?: string;
    disabled?: boolean;
}
export interface BoxProps extends BoxElementProps, BoxStyleProps {
}
export type StyledBoxProps = BoxProps & {
    'data-paste-element': string;
    theme: CustomTheme;
};
//# sourceMappingURL=types.d.ts.map